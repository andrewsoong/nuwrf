SHELL=/bin/sh
EXEC =		GSDSU.x
#
# - dependency rule -
# 1) module_floating_point.o must comes first. 
# 2) module_simulator.o (and other 3D array looping module) depends on module_mpi.o
#    So they should comes after module_mpi.
# 3) main_SDSU.o must be at the end.  
#
OBJSGCEM=	module_floating_point.o module_const.o Type_Kinds.o rdcmd.o scatdb.o module_scatdb.o module_psd.o module_convolution.o NESDIS_LandEM_Module.o module_telsem.o module_radar_power.o module_mpi.o module_gocart_interact.o module_simulator.o module_GV.o module_surface.o module_opt_micro.o simulator_micro.o module_radar.o module_lidar.o module_opt_visir.o simulator_visir.o simulator_broad.o module_opt_broad.o module_scan.o main_SDSU.o

############################################################################
#                        Makefile User Modification
#                      Satellite Data Simulation Unit       
#
# CPP is C-preprocessor
# CF is fortran compiler
# CFFLAGS is fortran compiler flag
# INC_NETCDF is netcdf include file directly
QRUN     = ./../QRUN_GEOS5
 
# Desk-top MAC  
#CPP     = /Users/matsui/Local/g95-install/bin/i386-apple-darwin8.8.1-g95 -E
#CF      = gfortran 
#CFFLAGS = -O0 #-Wall -O3 -ftree-vectorize  -fcheck=all
#CF      = mpif90  
#CFFLAGS = 
#INC_NETCDF = /usr/local/include
#LD_NETCDF = /usr/local/lib
#LINK_MPI =   #make blank for non-mpi option

# NCCS DISCOVER (modules: comp/intel-12.1.0.233 mpi/impi-4.0.3.008 )
#CPP     =  /lib/cpp -C
#CF      = mpif90
#CFFLAGS = -O0 -assume byterecl                                    # Rapid DEVEL  (fast compilation)
#CFFLAGS = -O1 -check bounds -g -traceback -assume byterecl       # Normal DEBUG 
#CFFLAGS = -O3 -ip -assume byterecl #-axAVX -xSSE4.1                 # Full run (intensive optimization)
#CC      = icc   # C-compiler for SCATDB
#INC_NETCDF = /usr/local/other/netcdf/3.6.2_intel-10.1.013/include
#LD_NETCDF = /usr/local/other/netcdf/3.6.2_intel-10.1.013/lib
#LINK_MPI = -lmpi  #make blank for non-mpi option 


# GEOS5 in Discover
CPP     =  /lib/cpp -C
CF      = mpif90
CFFLAGS = -O0 -assume byterecl                                    # Rapid DEVEL  (fast compilation)
#CFFLAGS = -O1 -check bounds -g -traceback -assume byterecl       # Normal DEBUG 
#CFFLAGS = -O3 -ip -assume byterecl #-axAVX -xSSE4.1                 # Full run (intensive optimization)
CC      = icc   # C-compiler for SCATDB
INC_NETCDF = /gpfsm/dswdev/mathomp4/Baselibs/GMAO-Baselibs-3_2_0-Intel_11.0.083-IMPI_3.2.2.006/x86_64-unknown-linux-gnu/ifort/Linux/include/netcdf #for GEOS5
LD_NETCDF = /gpfsm/dswdev/mathomp4/Baselibs/GMAO-Baselibs-3_2_0-Intel_11.0.083-IMPI_3.2.2.006/x86_64-unknown-linux-gnu/ifort/Linux/lib       #for GEOS5
LINK_MPI = -lmpi  #make blank for non-mpi option 



# NAS PLEIADES (modules: comp-intel/2011.2  mpi-sgi/mpt.2.04-fsa  )
#CPP     = /lib/cpp -C
#CF      = ifort 
#CFFLAGS = -O0 -assume byterecl                                    # Rapid DEVEL  (fast compilation)
#CFFLAGS = -O1 -check bounds -g -traceback -assume byterecl       # Normal DEBUG 
#CFFLAGS = -O1 -check bounds -g -traceback -fpe0 -assume byterecl # Intensive DEBUGG
#CFFLAGS = -O3 -ip -assume byterecl #-axAVX -xSSE4.1                 # Full run (intensive optimization)
#CC      = icc   # C-compiler for SCATDB
#INC_NETCDF = /nasa/netcdf/3.6.0/intel/include
#LD_NETCDF = /nasa/netcdf/3.6.0/intel/lib
#LINK_MPI = -lmpi  #make blank for non-mpi option

# This is for location of define_CPP.h , and universal for any machine. 
INCLUDE_DIR = -I./

#
#
############################################################################
# Lines from here on down should not need to be changed.  They are the
# actual rules which make uses to build executable.
#
all:		$(EXEC)
	echo $(EXEC) is up to date.
	cp GSDSU.x $(QRUN) 

$(EXEC):	$(OBJSGCEM)
	$(CF) -o $(@) $(OBJSGCEM) -L$(LD_NETCDF) -lcurl -lhdf5 -lnetcdf $(LINK_MPI)

.SUFFIXES :	.o  .f90 .F

.F.f90 :
	${CPP} -P ${INCLUDE_DIR} $*.F >$*.i
	sed '/^ *$$/d' $*.i > $*.f90 ; rm $*.i

.F.o :
	${CPP} -P ${INCLUDE_DIR} $*.F >$*.i
	sed '/^ *$$/d' $*.i  >$*.f90 ; rm $*.i
	${CF} ${CFFLAGS} ${DBUG} -I$(INC_NETCDF) -c $*.f90

.f90.o :
	${CF} ${CFFLAGS} ${DBUG} -I$(INC_NETCDF) -c $*.f90 

.c.o : 
	${CC} -c $*.c

clean:
	-rm -f *.f90 *.o *.x *.mod PI*

