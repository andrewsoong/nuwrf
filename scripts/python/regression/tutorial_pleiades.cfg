# Use this configuration to setup and/or run tutorial cases on Pleiades
[USERCONFIG]
# Repository we are testing (type and url):
repo_type=git
repo_url=/nobackup/ccruz/devel/code/nu-wrf_v9p1
# Branch name.
repo_branch=develop
# Filesystem where we are doing all the work. If it does not exist, it will be created.
scratch_dir=/nobackup/ccruz/scratch/nu-wrf/regression_testing/gitrepo
# Where we keep the regression scripts. Default <repository>/scripts/regression
scripts_dir=/nobackup/ccruz/devel/code/nu-wrf_v9p1/scripts/python/regression
# Compilation type (release, debug (-O0 -g), traps)
build_type=release
# Where to mail tests report
mail_to=carlos.a.cruz@nasa.gov
#
#
# The following options are not commonly changed:
# Use SLURM batch system on DISCOVER (NASA only)
# If set to 'no', script (and commands therein) will run interactively.
use_batch=yes
# sponsor ID required by SLURM
sponsor_id=s0942
# If we are using "modules" to load compilers then set to "yes"
# NOTE: If modules=yes then specify/use modulelist in COMPCONFIG section
# If set to 'no', scripts will use compilers available in the system.
use_modules=yes
# In case we update to CMake.... for now makeOld refers to GNU make.
make_system=makeOld
# Test report message (One sentence, no quotes)
message=Regression testing of NU-WRF code base
use_html=yes
# Clean the regression testing scratch space (under scratch_dir)
clean_scratch=yes
#
# Where we store data for the test cases. Default <project_dir>/regression_testing/data
# and on DISCOVER <project_dir> = /discover/nobackup/projects/nu-wrf
data_dir=/nobackup/ccruz/devel/data/Charney
# Location of NU-WRF output baseline files
baseline_dir=/nobackup/ccruz/devel/baselines
# Update baseline_dir with new model answers
update_base=yes
# Location of third-party libraries used by NU-WRF
nuwrflib_dir=/nobackup/ccruz/Baselibs/nu-wrf/intel-sgimpt-charney-p1
# LIS project directory
lis_project_dir=/nobackupp8/nuwrf
# To use a NU-WRF existing build, define model_dir below.
# If nothing specified then new builds will be created.
model_dir=/nobackup/ccruz/devel/code/nu-wrf_v9p1
# If Executables exist in a separate installation set the following variable:
exe_dir=/nobackup/ccruz/bin/nu-wrf/wrf
# If we want to recreate (setup) a testcase without running the components:
setup_runs=yes

############
# Test cases
############

# ---------
# BASIC WRF
# ---------
[wrf_4ice_2017rad]
compilers=intel-sgimpt
npes=1,1,1,28,84
components=geogrid,ungrib,metgrid,real,wrf
expected_output=wrfout_d01_2009-04-10_12:00:00,wrfout_d01_2009-04-10_15:00:00,wrfout_d01_2009-04-10_18:00:00,wrfout_d01_2009-04-10_21:00:00,wrfout_d01_2009-04-11_00:00:00,wrfout_d01_2009-04-11_03:00:00,wrfout_d01_2009-04-11_06:00:00,wrfout_d01_2009-04-11_09:00:00,wrfout_d01_2009-04-11_12:00:00,wrfout_d02_2009-04-10_12:00:00,wrfout_d02_2009-04-10_15:00:00,wrfout_d02_2009-04-10_18:00:00,wrfout_d02_2009-04-10_21:00:00,wrfout_d02_2009-04-11_00:00:00,wrfout_d02_2009-04-11_03:00:00,wrfout_d02_2009-04-11_06:00:00,wrfout_d02_2009-04-11_09:00:00,wrfout_d02_2009-04-11_12:00:00

# -------
# WFR-LIS
# -------
[wrflis_noah36_modis_merra2]
compilers=intel-sgimpt
npes=1,1,1,1,1,1,84,1,28,308
components=geogrid,merra2wrf,avg_tsfc,sst2wrf,metgrid,ldt_prelis,lis,ldt_postlis,real,wrf
expected_output=wrfout_d01_2007-01-19_12:00:00,wrfout_d01_2007-01-19_15:00:00,wrfout_d02_2007-01-19_12:00:00,wrfout_d02_2007-01-19_15:00:00,wrfout_d03_2007-01-19_12:00:00,wrfout_d03_2007-01-19_15:00:00

[wrflis_noah36_modis_merra2_lis_spinup]
compilers=intel-sgimpt
npes=8,1,1,1,28,1,192,1,28,308
components=geogrid,merra2wrf,avg_tsfc,sst2wrf,metgrid,ldt_prelis,lis,ldt_postlis,real,wrf
expected_output=wrfout_d01_2007-01-19_12:00:00,wrfout_d01_2007-01-19_15:00:00,wrfout_d02_2007-01-19_12:00:00,wrfout_d03_2007-01-19_12:00:00

# This  section specifies the computational environment including,
# if specified, the module list.
[COMPCONFIG]
# What compiler vendors we support. Current choices are: intel,gnu
compilers=intel
# Specify version for each compiler: One-to-one with 'compilers' list above.
# This information is *only* used in the final report.
compiler_versions=15.3.187
#
# Specify names of module lists here. Note that the names in this list
# must correspond to the ones referenced below.
modulelist=intel-sgimpt
# What each modulelist entry contains. Given names correspond to actual 
# module names on PLEIADES
intel-sgimpt=gcc/6.2,comp-intel/2015.3.187,mpi-sgi/mpt

