# This configuration file defines the setup for NU-WRF regression tests.
[USERCONFIG]
# Repository we are testing (type and url):
repo_type=git
repo_url=/discover/nobackup/ccruz/devel/nu-wrf/code/nuwrf
# Branch name.
repo_branch=develop
# Filesystem where we are doing all the work. If it does not exist, it will be created.
scratch_dir=/discover/nobackup/projects/nu-wrf/regression_testing/gitrepo
# Where we keep the regression scripts. Default <repository>/scripts/regression
scripts_dir=/discover/nobackup/ccruz/devel/nu-wrf/code/nuwrf/scripts/python/regression
# Compilation type (release, debug (-O0 -g), traps)
build_type=release
# Where to mail tests report
mail_to=
#
#
# The following options are not commonly changed:
# Use SLURM batch system on DISCOVER (NASA only)
# If set to 'no', script (and commands therein) will run interactively.
use_batch=yes
# sponsor ID required by SLURM
sponsor_id=s0942
# If we are using "modules" to load compilers then set to "yes"
# NOTE: If modules=yes then specify/use modulelist in COMPCONFIG section
# If set to 'no', scripts will use compilers available in the system.
use_modules=yes
# In case we update to CMake.... for now makeOld refers to GNU make.
make_system=makeOld
# Test report message (One sentence, no quotes)
message=Regression testing of NU-WRF Dalton release
use_html=yes
# Clean the regression testing scratch space (under scratch_dir)
clean_scratch=no
#
# Data path for the test cases. Default <project_dir>/regression_testing/data
# where <project_dir> = /discover/nobackup/projects/nu-wrf
data_dir=/discover/nobackup/projects/nu-wrf/regression_testing/data/Charney
# Location of NU-WRF output baseline files
baseline_dir=/discover/nobackup/projects/nu-wrf/regression_testing/baselines
# Update baseline_dir with new model answers
update_base=no
# Location of third-party libraries used by NU-WRF
nuwrflib_dir=/discover/nobackup/ccruz/Baselibs
# LIS project directory
lis_project_dir=/discover/nobackup/projects/lis
# To use a NU-WRF existing build, define model_dir below. 
# If nothing specified then new builds will be created.
model_dir=/discover/nobackup/ccruz/devel/nu-wrf/code/nuwrf
# If Executables exist in a separate installation set the following variable:
exe_dir=/discover/nobackup/ccruz/bin/nu-wrf/intel-18/scm
# If we want to recreate (setup) a testcase without running the components:
setup_runs=yes

############
# Test cases
############
[wrflis_scm_noahmp]
compilers=intel-intelmpi
npes=1,1,1,1,1,1,1,1,1,1
components=geogrid,ungrib,metgrid,ldt_prelis,lis,ldt_postlis,build_scm_forcing,lis4scm,ideal,wrf
expected_output=wrfout_d01_2006-07-14_00:00:00,wrfout_d01_2006-07-14_01:00:00,wrfout_d01_2006-07-14_02:00:00,wrfout_d01_2006-07-14_03:00:00,wrfout_d01_2006-07-14_04:00:00,wrfout_d01_2006-07-14_05:00:00,wrfout_d01_2006-07-14_06:00:00,wrfout_d01_2006-07-14_07:00:00,wrfout_d01_2006-07-14_08:00:00,wrfout_d01_2006-07-14_09:00:00,wrfout_d01_2006-07-14_10:00:00,wrfout_d01_2006-07-14_11:00:00,wrfout_d01_2006-07-14_12:00:00,wrfout_d01_2006-07-14_13:00:00,wrfout_d01_2006-07-14_14:00:00,wrfout_d01_2006-07-14_15:00:00,wrfout_d01_2006-07-14_16:00:00,wrfout_d01_2006-07-14_17:00:00,wrfout_d01_2006-07-14_18:00:00,wrfout_d01_2006-07-14_19:00:00,wrfout_d01_2006-07-14_20:00:00,wrfout_d01_2006-07-14_21:00:00,wrfout_d01_2006-07-14_22:00:00,wrfout_d01_2006-07-14_23:00:00,wrfout_d01_2006-07-15_00:00:00

[wrf_arw_simpleCONFIG]
compilers=intel-intelmpi
npes=1,1,1,28,28
components=geogrid,ungrib,metgrid,real,wrf
expected_output=wrfout_d01_2000-01-24_12:00:00

