#!/bin/sh
#------------------------------------------------------------------------------
# NASA/GSFC, Computational and Information Science and Technology Office,
# Code 606
#------------------------------------------------------------------------------
#
# SCRIPT:  discover_gnu490_openmpi173_sp3.cfg
#
# AUTHOR:
# Eric Kemp, SSAI and NASA/CISTO
#
# DESCRIPTION:
# NU-WRF build configuration script for DISCOVER (GNU 4.9.0 compilers and
# OpenMPI 1.7.3) using SLES11.3 operating system.  
# Supports optional compilation for Allinea MAP (a profiler).
#
#------------------------------------------------------------------------------

echo "Sourcing discover_gnu490_openmpi173_sp3.cfg"
export platform="discover"

#------------------------------------------------------------------------------
# Load environment modules and define libraries.
#------------------------------------------------------------------------------

# Take care of system libraries
source /usr/share/modules/init/bash
module purge
unset LD_LIBRARY_PATH
module load other/comp/gcc-4.9.0
module load other/mpi/openmpi/1.7.3-gcc-4.9.0
module load tool/allinea-tools-5.0.1
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/lib64
export CC=gcc
export MPI_IMPLEMENTATION="OPENMPI"

# Now define paths to non-system libraries
export LIBROOT=/discover/nobackup/projects/nu-wrf/lib/SLES11.3/nuwrflib-8r1
export compiler=gnu-4.9.0
export mpi=openmpi-1.7.3

export BUFRLIB=$LIBROOT/$compiler/bufrlib
export CAIRO=$LIBROOT/$compiler/cairo
export CAIRO_INCLUDE=$CAIRO/include/cairo
export CAIRO_LIB=$CAIRO/lib
export ESMF_ROOT=$LIBROOT/$compiler/esmf/$mpi
export ESMF_MPI_LIB=$ESMF_ROOT/lib/libO/Linux.gfortran.64.openmpi.default
export ESMF_MPI_MOD=$ESMF_ROOT/mod/modO/Linux.gfortran.64.openmpi.default
export FREETYPE=$LIBROOT/$compiler/freetype
export FREETYPE_INCLUDE=$FREETYPE/include/freetype
export FREETYPE_LIB=$FREETYPE/lib
export G2CLIB=$LIBROOT/$compiler/g2clib
export GHOSTSCRIPT=$LIBROOT/ghostscript
export GRIBAPI=$LIBROOT/$compiler/grib_api
export GRIBAPI_INCLUDE=$GRIBAPI/include
export GRIBAPI_LIB=$GRIBAPI/lib
export GSL=$LIBROOT/$compiler/gsl
export HDF4=$LIBROOT/$compiler/hdf4
export HDF4_PATH=$HDF4
export HDF4_INCLUDE=$HDF4/include
export HDF4_LIB=$HDF4/lib
export HDF5=$LIBROOT/$compiler/hdf5
export HDF5_PATH=$HDF5 
export HDF5_INCLUDE=$HDF5/include
export HDF5_LIB=$HDF5/lib
export HDFEOS=$LIBROOT/$compiler/hdfeos
export HDFEOS_PATH=$HDFEOS
export HDFEOS_INCLUDE=$HDFEOS/include
export HDFEOS_LIB=$HDFEOS/lib
export JASPER=$LIBROOT/$compiler/jasper
export JPEG=$LIBROOT/$compiler/jpeg
export LIBPNG=$LIBROOT/$compiler/libpng
export NCARG_ROOT=$LIBROOT/$compiler/ncarg

# NetCDF4 with HDF5 compression
export NETCDF_4=$LIBROOT/$compiler/netcdf4
export NETCDF_4_INCLUDE=${NETCDF_4}/include
export NETCDF_4_LIB=${NETCDF_4}/lib

# Generic aliases for netCDF.  Uses netCDF4.
export NETCDF=${NETCDF_4}
export NETCDF_INCLUDE=${NETCDF_4_INCLUDE}
export NETCDF_LIB=${NETCDF_4_LIB}
export NETCDF4=1 # WRF flag, HDF5 compression

# Generic aliases for netCDF.  Uses netCDF w/o HDF5 compression.
#export NETCDF=$LIBROOT/$compiler/netcdf
#export NETCDF_INCLUDE=$NETCDF/include
#export NETCDF_LIB=$NETCDF/lib
#export NETCDF4=0 # WRF flag, No HDF5 compression

export PIXMAN=$LIBROOT/$compiler/pixman
export ZLIB=$LIBROOT/$compiler/zlib
export ZLIB_PATH=$ZLIB 
export ZLIB_LIB=$ZLIB/lib

#------------------------------------------------------------------------------
# Settings for WRFV3.
#------------------------------------------------------------------------------

export J="-j 2" # Parallel make

# Flag to compile WRFV3 with MPI.  Required in NU-WRF.
export WRF_USE_MPI=1

# Flag to disable compilation of CLM4 in WRF.  Saves 10 minutes.
export WRF_SKIP_CLM4=1

# Options sent to configure script
export WRF_CONFIGURE_MPI_OPT=78

# Template configure.lis files
export WRF_CONFIGURE_LIS_MPI=configure.lis.linux_gfortran.nuwrf_mpi

export LIS_ARCH=linux_gfortran

# Allow large (> 2 Gb netCDF files)
export WRFIO_NCD_LARGE_FILE_SUPPORT=1

# ESMF Library for WRFV3                                                      
export WRF_ESMF_LIBS_MPI="-L$ESMF_MPI_LIB -lesmf -lstdc++ -lrt"

# ZLIB library for WRFV3 (required by LIS)                                     
export WRF_ZLIB_LIBS="-L$ZLIB -lz"

# GRIBAPI library for WRFV3 (required by LIS 7)                           
export WRF_GRIBAPI_LIBS="-L$GRIBAPI_LIB -lgrib_api_f90 -lgrib_api"

# Need yacc and flex for KPP.
export YACC='/usr/bin/yacc -d'
export FLEX_LIB_DIR='/usr/lib64'

# Compiler debugging flags
WRF_DEBUG_CFLAGS_LOCAL="-g"
WRF_DEBUG_CFLAGS_LOCAL+=" -O0"
WRF_DEBUG_CFLAGS_LOCAL+=" -w"
export WRF_DEBUG_CFLAGS_LOCAL

WRF_DEBUG_FCOPTIM="-g -fbacktrace"
WRF_DEBUG_FCOPTIM+=" -O0"
WRF_DEBUG_FCOPTIM+=" -w"
WRF_DEBUG_FCOPTIM+=" -fcheck=bounds,mem,pointer"
#WRF_DEBUG_FCOPTIM+=" -ffpe-trap=invalid,zero,overflow"
WRF_DEBUG_FCOPTIM+=" -ffree-line-length-none"
export WRF_DEBUG_FCOPTIM

# Special libraries for compiling WRF for Allinea MAP.
# Provided by Georgios Britzolakis of NCCS
ALLINEA_DIR=$(cd $(dirname $0) ; pwd)
ALLINEA_DIR+="/Allinea"
export ALLINEA_DIR
export ALLINEA_LIBS=$ALLINEA_DIR
WRF_PROFILEMAP_LIBS=" -WL,@$ALLINEA_LIBS/allinea-profiler.ld"
export WRF_PROFILEMAP_LIBS

export WRF_DEBUG_FCNOOPT=$WRF_DEBUG_FCOPTIM

export WRF_DEBUG_LIS_CFLAGS=$WRF_DEBUG_CFLAGS_LOCAL
export WRF_DEBUG_LIS_FFLAGS77=$WRF_DEBUG_FCOPTIM
export WRF_DEBUG_LIS_FFLAGS=$WRF_DEBUG_FCOPTIM

#------------------------------------------------------------------------------
# Settings for WPS.
#------------------------------------------------------------------------------

# Flag to compile WPS with MPI.  Required in NU-WRF.
export WPS_USE_MPI=1

# Configure options for WPS
export WPS_CONFIGURE_MPI_OPT=51

# GRIB2 libraries (Jasper, LIBPNG, and ZLIB) for WPS
export WPS_GRIB2_LIBS="$JASPER/lib -L$LIBPNG/lib -L$ZLIB/lib"
export WPS_GRIB2_INC="$JASPER/include -I$LIBPNG/include -I$ZLIB/include"

# Compiler debug flags
WPS_DEBUG_CFLAGS="-g"
WPS_DEBUG_CFLAGS+=" -O0"
WPS_DEBUG_CFLAGS+=" -w"
export WPS_DEBUG_CFLAGS

WPS_DEBUG_FFLAGS="-g -fbacktrace"
WPS_DEBUG_FFLAGS+=" -O0"
WPS_DEBUG_FFLAGS+=" -w"
WPS_DEBUG_FFLAGS+=" -fcheck=bounds,mem,pointer"
#WPS_DEBUG_FFLAGS+=" -ffpe-trap=invalid,zero,overflow"
WPS_DEBUG_FFLAGS+=" -ffree-line-length-none"
WPS_DEBUG_FFLAGS+=" -ffree-form -fconvert=big-endian"
export WPS_DEBUG_FFLAGS

WPS_DEBUG_F77FLAGS="-g -fbacktrace"
WPS_DEBUG_F77FLAGS+=" -O0"
WPS_DEBUG_F77FLAGS+=" -w"
WPS_DEBUG_F77FLAGS+=" -fcheck=bounds,mem,pointer"
#WPS_DEBUG_F77FLAGS+=" -ffpe-trap=invalid,zero,overflow"
WPS_DEBUG_F77FLAGS+=" -ffree-line-length-none"
WPS_DEBUG_F77FLAGS+=" -ffixed-form -fconvert=big-endian"
export WPS_DEBUG_F77FLAGS

#------------------------------------------------------------------------------
# Settings for UPP                                                            
#------------------------------------------------------------------------------

# Flag to compile UPP with MPI.  Required in NU-WRF.
export UPP_USE_MPI=1

# Configure options for UPP.
export UPP_CONFIGURE_MPI_OPT=20

# GRIB2 libraries (Jasper, LIBPNG, and ZLIB) for UPP
export UPP_GRIB2_LIBS="$JASPER/lib -L$LIBPNG/lib -L$ZLIB/lib"
export UPP_GRIB2_INC="$JASPER/include -I$LIBPNG/include -I$ZLIB/include"

# GRIB_API library 
export UPP_GRIB_API_LIB="-L$GRIBAPI/lib -lgrib_api_f90 -lgrib_api"

#------------------------------------------------------------------------------
# Settings for RIP                                                            
#------------------------------------------------------------------------------

export RIP_CONFIGURE_OPT=6

#------------------------------------------------------------------------------
# Settings for ARWpost                                                        
#------------------------------------------------------------------------------

export ARWPOST_CONFIGURE_OPT=5

#------------------------------------------------------------------------------
# Settings for MET                                                            
#------------------------------------------------------------------------------

# Checked by MET configure script
export CXX=g++
export CC=gcc
export F77=gfortran

export MET_BUFR=$BUFRLIB
export MET_BUFRINC=$BUFRLIB/include
export MET_BUFRLIB=$BUFRLIB/lib

export MET_CAIRO=$CAIRO
export MET_CAIROINC=$CAIRO_INCLUDE
export MET_CAIROLIB="$CAIRO_LIB -L$PIXMAN/lib -L$LIBPNG/lib"

export MET_FONT_DIR=$GHOSTSCRIPT

export MET_FREETYPE=$FREETYPE
export MET_FREETYPEINC=$FREETYPE_INCLUDE
export MET_FREETYPELIB=$FREETYPE_LIB

export MET_GRIB2C=$G2CLIB
export MET_GRIB2CINC=$G2CLIB/include
export MET_GRIB2CLIB="$G2CLIB/lib -L/$JASPER/lib -L$LIBPNG/lib -L$ZLIB/lib"

export MET_GSL=$GSL
export MET_GSLINC=$GSL/include
export MET_GSLLIB=$GSL/lib

export MET_HDF=$HDF4
export MET_HDFINC=$HDF4/include
export MET_HDFLIB=$HDF4/lib

export MET_HDFEOS=$HDFEOS
export MET_HDFEOSINC=$HDFEOS/include
export MET_HDFEOSLIB=$HDFEOS/lib

export MET_NETCDF=${NETCDF}
export MET_NETCDFINC=${NETCDF}/include
export MET_NETCDFLIB="${NETCDF}/lib -L$HDF5/lib -L$ZLIB/lib"

#------------------------------------------------------------------------------
# Settings for GEOS2WRF and MERRA2WRF.
#------------------------------------------------------------------------------

# Makefile template for GEOS2WRF/MERRA2WRF                                     
export GEOS2WRF_MAKEFILE=Makefile.nuwrf.gfortran

# HDF4 library for GEOS2WRF/MERRA2WRF
export GEOS2WRF_HDF4_ROOT=$HDF
export GEOS2WRF_HDF4_INCLUDE="-I$HDF4/include"
export GEOS2WRF_HDF4_LIB="-L$HDF4/lib -lmfhdf -ldf -L$JPEG/lib -ljpeg -L$ZLIB/lib -lz"

# NetCDF4 w/ HDF5 compression required for GEOS2WRF/MERRA2WRF
export GEOS2WRF_NETCDF4_ROOT=${NETCDF_4}
export GEOS2WRF_NETCDF4_INCLUDE="-I${NETCDF_4}/include"
export GEOS2WRF_NETCDF4_LIB="-L${NETCDF_4}/lib -lnetcdff -lnetcdf -L$HDF5/lib -lhdf5_hl -lhdf5 -ldl -L$ZLIB/lib -lz"

#------------------------------------------------------------------------------
# Settings for GOCART2WRF.
#------------------------------------------------------------------------------

# Makefile template for GOCART2WRF                                            
export GOCART2WRF_MAKEFILE=Makefile.nuwrf.gfortran

# NetCDF4 w/ HDF5 compression required for GOCART2WRF.
export GOCART2WRF_NETCDF4=${NETCDF_4}
export GOCART2WRF_HDF5=$HDF5       # HDF5 library
export GOCART2WRF_ZLIB=$ZLIB       # ZLIB library
export GOCART2WRF_LIBS=" -lnetcdff -lnetcdf -lhdf5_hl -lhdf5 -ldl -lz"

#------------------------------------------------------------------------------
# Settings for CASA2WRF.
#------------------------------------------------------------------------------

# Makefile template for CASA2WRF                                            
export CASA2WRF_MAKEFILE=Makefile.nuwrf.gfortran

# NetCDF4 with HDF5 required for CASA2WRF.
export CASA2WRF_NETCDF4=${NETCDF_4}
export CASA2WRF_HDF5=$HDF5       # HDF5 library
export CASA2WRF_ZLIB=$ZLIB       # ZLIB library
export CASA2WRF_LIBS=" -lnetcdff -lnetcdf -lhdf5_hl -lhdf5 -ldl -lz"

export CASA2WRF_PPROC_FC=gfortran
export CASA2WRF_PPROC_FFLAGS=" -O0 -g -fbacktrace"

#------------------------------------------------------------------------------
# Settings for GSDSU.
#------------------------------------------------------------------------------

# Makefile template for GSDSU                                                 
export GSDSU_MAKEFILE="makefile.nuwrf.gfortran"

# NetCDF library for GSDSU
export GSDSU_NETCDF_INCDIR=$NETCDF/include
export GSDSU_NETCDF_LIBDIR=$NETCDF/lib
export GSDSU_NETCDF4_DEP_LIB="-L$HDF5/lib -L$ZLIB/lib -lhdf5_hl -lhdf5 -ldl -lz"

#------------------------------------------------------------------------------
# Settings for LISCONFIG.
#------------------------------------------------------------------------------

# Makefile template for lisconfig                                             
export LISCONFIG_MAKEFILE=Makefile.nuwrf.gfortran

# NetCDF library for lisconfig
export LISCONFIG_NETCDF4_DEP_LIB="-L$HDF5/lib -L$ZLIB/lib -lhdf5_hl -lhdf5 -ldl -lz"
export LISCONFIG_NETCDFINCDIR="$NETCDF/include"
export LISCONFIG_NETCDFLIB="-lnetcdff -lnetcdf $LISCONFIG_NETCDF4_DEP_LIB"
export LISCONFIG_NETCDFLIBDIR=$NETCDF/lib

#------------------------------------------------------------------------------
# Settings for PREP_CHEM_SOURCES.
#------------------------------------------------------------------------------

# Suffix for include.mk file used to build PREP_CHEM_SOURCES.                 
export MAKEPSC_OPT=opt.gfortran.nuwrf

# Specify version of PREP_CHEM_SOURCES for WRF
export CHEM_TYPE=RADM_WRF_FIM
export AER_TYPE=SIMPLE

# NetCDF4 with HDF5 compression required for PREP_CHEM_SOURCES
export PCS_BASIC_NETCDF="-I${NETCDF_4}/include -L${NETCDF_4}/lib -lnetcdff -lnetcdf"
export PCS_NETCDF4_DEP_LIBS="-I$HDF5/include -L$HDF5/lib -L$ZLIB/lib -lhdf5_hl  -lhdf5hl_fortran -lhdf5_fortran -lhdf5 -ldl -lz"
export PCS_NETCDF_LIBS="$PCS_BASIC_NETCDF $PCS_NETCDF4_DEP_LIBS"

# Specify HDF4
export PCS_HDF_LIBS="-L$HDF4/lib -lmfhdf -ldf -L$JPEG/lib -ljpeg -L$ZLIB/lib -lz"

#------------------------------------------------------------------------------
# Settings for plot_chem.
#------------------------------------------------------------------------------

# Need access to NCAR Graphics
export PATH=${NCARG_ROOT}/bin:$PATH
export PLOT_CHEM_MAKEFILE=Makefile.gfortran.nuwrf

#------------------------------------------------------------------------------
# Settings for sst2wrf.                                            
#------------------------------------------------------------------------------

export SST2WRF_MAKEFILE=Makefile.nuwrf.gfortran

#------------------------------------------------------------------------------
# Settings for LDT
#------------------------------------------------------------------------------

export LDT_ARCH=linux_gfortran
export LDT_FC=mpif90
export LDT_CC=mpicc
export LDT_GRIBAPI=$GRIBAPI
export LDT_NETCDF=${NETCDF_4} # NetCDF4 w/ HDF5 compression required for LDT.
export LDT_HDF5=$HDF5
export LDT_MODESMF=$ESMF_MPI_MOD
export LDT_LIBESMF=$ESMF_MPI_LIB
export LDT_JASPER=$JASPER
export LDT_HDF4=$HDF4
export LDT_HDFEOS=$HDFEOS
export LDT_SKIP_HISTORY=1 # To skip history date/time stamp metadata

#------------------------------------------------------------------------------
# Settings for LVT
#------------------------------------------------------------------------------

# Name of configuration file under the "arch" folder to use for this system.
export LVT_ARCH_CONFIGURE_FILE=configure.lvt.linux_gfortran.nuwrf
export LVT_NETCDF4_DEP_LIB="-L$HDF5/lib -L$ZLIB/lib -lhdf5_hl -lhdf5 -ldl -lz"
export LVT_ARCH=linux_gfortran
export LVT_FC=mpif90
export LVT_CC=mpicc
export LVT_GRIBAPI=$GRIBAPI
export LVT_NETCDF=${NETCDF_4} # NetCDF4 w/ HDF5 compression required for LVT.
export LVT_HDF5=$HDF5
export LVT_MODESMF=$ESMF_MPI_MOD
export LVT_LIBESMF=$ESMF_MPI_LIB
export LVT_JASPER=$JASPER
export LVT_HDF4=$HDF4
export LVT_HDFEOS=$HDFEOS

#------------------------------------------------------------------------------
# Make sure compilation occurs on SLES11.3 operating system.
#------------------------------------------------------------------------------

if grep "VERSION = 11" /etc/SuSE-release > /dev/null ; then
    if grep "PATCHLEVEL = 3" /etc/SuSE-release > /dev/null ; then
        error=0
    else
        error=1
    fi
else
    error=1
fi

if [ $error -eq 1 ] ; then
    echo "ERROR, local operating system is not SLES11.3!"
    echo "This build configuration should only be used on an updated operating system."
    echo "Check www.nccs.nasa.gov for list of login nodes running SLES11.3."
    echo "Or switch to an older build configuration."
    exit 1
fi
