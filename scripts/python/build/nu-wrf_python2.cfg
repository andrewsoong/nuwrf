[libconfig]
libdir_tag = /discover/nobackup/projects/nu-wrf/lib/intel-intelmpi
compiler_vendor = intel
mpi_vendor = intelmpi
# Libraries paths
bufrlib = %(libdir_tag)s/bufrlib
cairo = %(libdir_tag)s/cairo
cairo_include = %(cairo)s/include/cairo
cairo_lib = %(cairo)s/lib
esmf_root = %(libdir_tag)s/esmf
esmf_mpi_lib = %(esmf_root)s/lib/libO/Linux.%(compiler_vendor)s.64.%(mpi_vendor)s.default
esmf_mpi_mod = %(esmf_root)s/mod/modO/Linux.%(compiler_vendor)s.64.%(mpi_vendor)s.default
fortrangis = %(libdir_tag)s/fortrangis
freetype = %(libdir_tag)s/freetype
freetype_include = %(freetype)s/include/freetype
freetype_lib = %(freetype)s/lib
g2clib = %(libdir_tag)s/g2clib
gdal = %(libdir_tag)s/gdal
ghostscript = %(libdir_tag)s/ghostscript
gribapi = %(libdir_tag)s/grib_api
gribapi_include = %(gribapi)s/include
gribapi_lib = %(gribapi)s/lib
gsl = %(libdir_tag)s/gsl
hdf4 = %(libdir_tag)s/hdf4
hdf4_path = %(hdf4)s
hdf4_include = %(hdf4)s/include
hdf4_lib = %(hdf4)s/lib
hdf5 = %(libdir_tag)s/hdf5
hdf5_path = %(hdf5)s
hdf5_include = %(hdf5)s/include
hdf5_lib = %(hdf5)s/lib
hdfeos = %(libdir_tag)s/hdfeos
hdfeos_path = %(hdfeos)s
hdfeos_include = %(hdfeos)s/include
hdfeos_lib = %(hdfeos)s/lib
jasper = %(libdir_tag)s/jasper
jpeg = %(libdir_tag)s/jpeg
png = %(libdir_tag)s/png
ncarg_root = %(libdir_tag)s/ncarg
# NetCDF4 with HDF5 compression
netcdf_4 = %(libdir_tag)s/netcdf4
netcdf_4_include = %(netcdf_4)s/include
netcdf_4_lib = %(netcdf_4)s/lib
# Generic aliases for netCDF.  Uses netCDF4.
netcdf = %(netcdf_4)s
netcdf_include = %(netcdf_4_include)s
netcdf_lib = %(netcdf_4_lib)s
netcdf4 = 1
pixman = %(libdir_tag)s/pixman
zlib = %(libdir_tag)s/zlib
zlib_include = %(zlib)s/include
zlib_lib = %(zlib)s/lib
# BOXMGLIBDIR is used by WRF electrification scheme
# Note: Only works with intelcompiler-intelmpi combination 
boxmglibdir=%(libdir_tag)s/boxmg

# [wrfconfig]
# Parallel make
j = -j 2
wrf_use_mpi = 1
wrf_skip_clm4 = 1
# Allow large (> 2 Gb netCDF files)
wrfio_ncd_large_file_support = 1
# ESMF Library for WRF                                                     
wrf_esmf_libs_mpi = -L%(esmf_mpi_lib)s -lesmf -lstdc++ -lrt
# ZLIB library for WRF (required by LIS)                                     
wrf_zlib_libs = -L%(zlib_lib)s -lz
# GRIBAPI library for WRF (required by LIS)                           
wrf_gribapi_libs = -L%(gribapi_lib)s -lgrib_api_f90 -lgrib_api
# Need yacc and flex for KPP.
yacc = /usr/bin/yacc -d
flex_lib_dir = /usr/lib64
#wrf_configure_mpi_opt_gnucompiler-sgimpt = 82
#wrf_configure_mpi_opt_gnucompiler-mvapich2 = 90
wrf_configure_mpi_opt_gnucompiler-openmpi = 86
#wrf_configure_mpi_opt_intelcompiler-sgimpt = 78
wrf_configure_mpi_opt_intelcompiler-intelmpi = 74
#wrf_configure_lis_mpi_gnucompiler-sgimpt = configure.lis.linux_gfortran.nuwrf_mpi
#wrf_configure_lis_mpi_gnucompiler-mvapich2 = configure.lis.linux_gfortran.nuwrf_mpi
wrf_configure_lis_mpi_gnucompiler-openmpi = configure.lis.linux_gfortran.nuwrf_mpi
wrf_configure_lis_mpi_intelcompiler-intelmpi = configure.lis.linux_ifc.nuwrf_mpi
#wrf_configure_lis_mpi_intelcompiler-sgimpt = configure.lis.linux_ifc.nuwrf_mpi
#lis_arch_intelcompiler-sgimpt = linux_ifc
lis_arch_intelcompiler-intelmpi = linux_ifc
#lis_arch_gnucompiler-sgimpt = linux_gfortran
wrf_debug_cflags_local_intelcompiler = -g -O0 -w -check=conversions,stack,uninit -debug
wrf_debug_fcoptim_intelcompiler = -g -O0 -w -check bounds,pointers,stack,uninit -debug
wrf_debug_fcnoopt_intelcompiler = -g -O0 -w -check bounds,pointers,stack,uninit -debug
wrf_debug_cflags_local_gnucompiler = -g -O0
wrf_debug_fcoptim_gnucompiler = -g -O0 -fbounds-check -fcheck-array-temporaries -ffpe-trap=invalid,zero,overflow -finit-real=snan
wrf_debug_fcnoopt_gnucompiler = -g -O0 -fbounds-check -fcheck-array-temporaries -ffpe-trap=invalid,zero,overflow -finit-real=snan
wrf_debug_lis_cflags_intelcompiler = %(wrf_debug_cflags_local_intelcompiler)s
wrf_debug_lis_fflags77_intelcompiler = %(wrf_debug_fcoptim_intelcompiler)s
wrf_debug_lis_fflags_intelcompiler = %(wrf_debug_fcoptim_intelcompiler)s
wrf_debug_lis_cflags_gnucompiler = %(wrf_debug_cflags_local_gnucompiler)s
wrf_debug_lis_fflags77_gnucompiler = %(wrf_debug_fcoptim_gnucompiler)s
wrf_debug_lis_fflags_gnucompiler = %(wrf_debug_fcoptim_gnucompiler)s

# WRF electrification scheme is OFF by default
# Note: Only work with intelcompiler-intelmpi combination
wrf_elec = 0

lis_fc = mpif90
lis_cc = mpicc
lis_modesmf = %(esmf_mpi_mod)s
lis_libesmf = %(esmf_mpi_lib)s
lis_gribapi = %(gribapi)s
lis_jasper = %(jasper)s
lis_netcdf = %(netcdf)s
lis_hdf4 = %(hdf4)s
lis_hdf5 = %(hdf5)s
lis_hdfeos = %(hdfeos)s

# [wpsconfig]
wps_use_mpi = 1
# Configure options for WPS
wps_configure_mpi_opt_gnucompiler = 51
wps_configure_mpi_opt_intelcompiler = 47
# GRIB2 libraries (Jasper, PNG, and ZLIB) for WPS
wps_grib2_libs = %(jasper)s/lib -L%(png)s/lib -L%(zlib)s/lib
wps_grib2_inc = %(jasper)s/include -I%(png)s/include -I%(zlib_include)s
# Compiler debug flags
wps_debug_cflags_intelcompiler = -g -O0 -w -check=conversions,stack,uninit -debug
wps_debug_fflags_intelcompiler = -g -O0 -w -check bounds,pointers,stack,uninit -debug -FR
wps_debug_f77flags_intelcompiler = -g -O0 -w -check bounds,pointers,stack,uninit -debug -FI
wps_debug_cflags_gnucompiler = -g -O0
wps_debug_fflags_gnucompiler = -g -O0 -fbounds-check -fcheck-array-temporaries -ffpe-trap=invalid,zero,overflow -finit-real=snan
wps_debug_f77flags_gnucompiler = -g -O0 -fbounds-check -fcheck-array-temporaries -ffpe-trap=invalid,zero,overflow -finit-real=snan -ffixed-form

# [uppconfig]
# Flag to compile UPP with MPI.  Required in NU-WRF.
upp_use_mpi = 1
# Configure options for UPP.
upp_configure_mpi_opt_gnucompiler = 20
upp_configure_mpi_opt_intelcompiler = 18
# GRIB2 libraries (Jasper, PNG, and ZLIB) for UPP
upp_grib2_libs = %(jasper)s/lib -L%(png)s/lib -L%(zlib_lib)s
upp_grib2_inc = %(jasper)s/include -I%(png)s/include -I%(zlib_include)s
# GRIB_API library 
upp_grib_api_lib = -L%(gribapi_lib)s -lgrib_api_f90 -lgrib_api

# [ripconfig]
rip_configure_opt_gnucompiler = 3
rip_configure_opt_intelcompiler = 5

# [arwpostconfig]
arwpost_configure_opt_gnucompiler = 5
arwpost_configure_opt_intelcompiler = 4

# [metconfig]
met_bufr = %(bufrlib)s
met_bufrinc = %(bufrlib)s/include
met_bufrlib = %(bufrlib)s/lib
met_cairo = %(cairo)s
met_cairoinc = %(cairo_include)s
met_cairolib = %(cairo_lib)s -L%(pixman)s/lib -L%(png)s/lib
met_font_dir = %(ghostscript)s
met_freetype = %(freetype)s
met_freetypeinc = %(freetype_include)s
met_freetypelib = %(freetype_lib)s
met_grib2c = %(g2clib)s
met_grib2cinc = %(g2clib)s/include
met_grib2clib = %(g2clib)s/lib -L%(jasper)s/lib -L%(png)s/lib -L%(zlib_lib)s
met_gsl = %(gsl)s
met_gslinc = %(gsl)s/include
met_gsllib = %(gsl)s/lib
met_hdf = %(hdf4)s
met_hdfinc = %(hdf4_include)s
met_hdflib = %(hdf4_lib)s
met_hdf5 = %(hdf5)s
met_hdf5inc = %(hdf5_include)s
met_hdf5lib = %(hdf5_lib)s
met_hdfeos = %(hdfeos)s
met_hdfeosinc = %(hdfeos_include)s
met_hdfeoslib = %(hdfeos_lib)s
met_netcdf = %(netcdf_4)s
met_netcdfinc = %(netcdf_4)s/include
met_netcdflib = %(netcdf_4)s/lib -L%(hdf5_lib)s -L%(zlib_lib)s

# [gsdsuconfig]
gsdsu_makefile_gnucompiler = makefile.nuwrf.gfortran
gsdsu_makefile_intelcompiler = makefile.nuwrf.ifort
gsdsu_netcdf_incdir = %(netcdf_4_include)s
gsdsu_netcdf_libdir = %(netcdf_4_lib)s
gsdsu_netcdf4_dep_lib = -L%(hdf5_lib)s -L%(zlib_lib)s -lhdf5_hl -lhdf5 -lz

# [ldtconfig]
ldt_arch_gnucompiler = linux_gfortran
ldt_arch_intelcompiler = linux_ifc
ldt_fc = mpif90
ldt_cc = mpicc
ldt_gribapi = %(gribapi)s
ldt_netcdf = %(netcdf_4)s 
ldt_hdf5 = %(hdf5)s
ldt_modesmf = %(esmf_mpi_mod)s
ldt_libesmf = %(esmf_mpi_lib)s
ldt_jasper = %(jasper)s
ldt_hdf4 = %(hdf4)s
ldt_hdfeos = %(hdfeos)s
ldt_skip_history = 0
ldt_gdal = %(gdal)s
ldt_fortrangis = %(fortrangis)s


# [lvtconfig]
# Name of configuration file under the "arch" folder to use for this system.
lvt_arch_configure_file_gnucompiler = configure.lvt.linux_gfortran
lvt_arch_gnucompiler = linux_gfortran
lvt_arch_configure_file_intelcompiler = configure.lvt.linux_ifc.discover
lvt_arch_intelcompiler = linux_ifc
lvt_netcdf4_dep_lib = -L%(hdf5_lib)s -L%(zlib_lib)s -lhdf5_hl -lhdf5 -lz
lvt_fc = mpif90
lvt_cc = mpicc
lvt_gribapi = %(gribapi)s
lvt_netcdf = %(netcdf_4)s
lvt_hdf5 = %(hdf5)s
lvt_modesmf = %(esmf_mpi_mod)s
lvt_libesmf = %(esmf_mpi_lib)s
lvt_jasper = %(jasper)s
lvt_hdf4 = %(hdf4)s
lvt_hdfeos = %(hdfeos)s
lvt_gdal = %(gdal)s
lvt_fortrangis = %(fortrangis)s

